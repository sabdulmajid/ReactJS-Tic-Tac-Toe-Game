{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","state","squares","Array","fill","xIsNext","i","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","Game","lines","length","a","b","c","includes","ReactDOM","render","document","getElementById","button","createElement","innerHTML","getElementsByTagName","appendChild","addEventListener","window","location","reload"],"mappings":"oOAIMA,E,4JACF,WAAU,IAAD,OACP,OACE,wBACIC,UAAU,SACVC,QAAS,kBAAM,EAAKC,MAAMD,WAF9B,SAIGE,KAAKD,MAAME,Y,GAPDC,IAAMC,WAanBC,E,kDACJ,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,+CAQnB,SAAYC,GACR,IAAMJ,EAAUN,KAAKK,MAAMC,QAAQK,QAC/BC,EAAgBN,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKV,KAAKK,MAAMI,QAAU,IAAM,IACxCT,KAAKa,SAAS,CACZP,QAASA,EACTG,SAAUT,KAAKK,MAAMI,a,0BAI3B,SAAaC,GAAI,IAAD,OACd,OACM,cAACd,EAAD,CACIK,MAAOD,KAAKK,MAAMC,QAAQI,GAC1BZ,QAAS,kBAAM,EAAKgB,YAAYJ,Q,oBAK5C,WACE,IACIK,EADEC,EAASJ,EAAgBZ,KAAKK,MAAMC,SAU1C,OAPES,EADEC,GAAqB,SAAXA,EACH,WAAaA,EACbA,GAAqB,SAAXA,EACb,mBAEA,uBAAoBhB,KAAKK,MAAMI,QAAU,IAAM,KAIrD,gCACE,qBAAKZ,UAAU,SAAf,SAAyBkB,IACzB,sBAAKlB,UAAU,YAAf,UACGG,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,MAErB,sBAAKpB,UAAU,YAAf,UACGG,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,MAErB,sBAAKpB,UAAU,YAAf,UACGG,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,a,GAzDTf,IAAMC,WAgEpBe,E,4JACJ,WACE,OACE,sBAAKrB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACO,EAAD,MAEF,sBAAKP,UAAU,YAAf,UACE,wBACA,iC,GATSK,IAAMC,WAuBzB,SAASS,EAAgBN,GAY3B,IAXI,IAAMa,EAAQ,CACd,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGFT,EAAI,EAAGA,EAAIS,EAAMC,OAAQV,IAAK,CACnC,kBAAkBS,EAAMT,GAAxB,GAAOW,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAGjB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GACjE,OAAOjB,EAAQe,GAEd,IAAIf,EAAQkB,SAAS,MACtB,MAAO,OAGf,OAAO,KA1BLC,IAASC,OACP,cAACR,EAAD,IACAS,SAASC,eAAe,SA2B5B,IAAIC,EAASF,SAASG,cAAc,UACpCD,EAAOE,UAAY,aAERJ,SAASK,qBAAqB,QAAQ,GAC5CC,YAAYJ,GAEjBA,EAAOK,iBAAkB,SAAS,WAChCC,OAAOC,SAASC,QAAO,Q","file":"static/js/main.0a36d8fa.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component {\n    render() {\n      return (\n        <button \n            className=\"square\" \n            onClick={() => this.props.onClick()}\n        >\n          {this.props.value}\n        </button>\n      );\n    }\n  }\n  \n  class Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n          return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          squares: squares,\n          xIsNext: !this.state.xIsNext,\n        });\n    }\n    \n    renderSquare(i) {\n      return (\n            <Square \n                value={this.state.squares[i]}\n                onClick={() => this.handleClick(i)}\n            />\n        );\n    }\n  \n    render() {\n      const winner = calculateWinner(this.state.squares);\n      let status;\n      if (winner && winner !== 'draw') {\n        status = 'Winner: ' + winner;\n      } else if (winner && winner === 'draw') {\n        status = `Draw! Try again!`;\n      } else {\n        status = `Next player: ${(this.state.xIsNext ? 'X' : 'O')}`;\n      }\n    \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n\n  function calculateWinner(squares) {\n    const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n];\n\nfor (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n    }\n    else if(!squares.includes(null)){\n        return 'draw';\n    }\n}\nreturn null;\n}\n\nvar button = document.createElement(\"button\");\nbutton.innerHTML = \"Play Again\";\n\nvar body = document.getElementsByTagName(\"body\")[0];\nbody.appendChild(button);\n\nbutton.addEventListener (\"click\", function() {\n  window.location.reload(false);\n});"],"sourceRoot":""}